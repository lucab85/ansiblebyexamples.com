{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Learn Ansible Fast","text":"<p>I teach creative Automation DevOps, helping Cloud Engineers, System Administrators, and IT professionals with Ansible Technology to automate more things successfully every day.</p>"},{"location":"#about-me","title":"About Me","text":"<p>Luca Berton is a seasoned Ansible Automation expert with over 18 years of experience in IT, focusing on DevOps, Cloud Engineering, and System Administration.</p> <p>He has authored several best-selling books, including Ansible for VMware by Examples and Ansible for Kubernetes by Example, and is the creator of the Ansible Pilot project. Luca has contributed significantly to the open-source community, particularly in enhancing Ansible\u2019s functionality. He has also been recognized for his active participation in conferences and his contributions to the Ansible community through various events and publications.</p>"},{"location":"#comprehensive-services-for-automation-and-innovation","title":"Comprehensive Services for Automation and Innovation","text":"<p>Luca Berton offers a wide range of services designed to empower your organization through advanced automation, cloud infrastructure design, and training. Explore these services to see how Luca can help you master the technologies that drive modern innovation.</p> <ul> <li> <p>Ansible Publications I\u2019ve authored books on Ansible, like \u201cAnsible for Kubernetes by Example\u201d and \u201cHands-on Ansible Automation.\u201d These provide in-depth knowledge and tips to help you become proficient in Ansible.</p> </li> <li> <p>Online Courses Enroll in my courses on Udemy, Coursera, and Pluralsight. These courses cover a wide range of Ansible topics, from introductory concepts to advanced techniques, helping you gain hands-on experience.</p> </li> <li> <p>AI and Ansible Integration Integrate AI-driven automation into your Ansible workflows. I offer services to combine AI with Ansible, enabling smarter and more efficient automation processes.</p> </li> <li> <p>Security Automation Secure your infrastructure with automated Ansible solutions. I implement best practices and automate compliance checks, ensuring your systems are protected against vulnerabilities, meet regulatory requirements, and maintain operational integrity with minimal manual intervention.</p> </li> <li> <p>DevSecOps Toolchain Integration Seamlessly integrate Ansible with your DevSecOps toolchain. My expertise includes connecting Ansible with Jenkins, Git, Docker, Kubernetes for smooth and efficient workflows.</p> </li> <li> <p>Products &amp; Contributions Discover my contributions to the Ansible community, including open-source projects, tools, and best practices. My work helps others succeed in their Ansible endeavors.</p> </li> <li> <p>Community Engagement Engage with me in the automation community. Participate in discussions, attend webinars, and learn from my experience in automation and cloud infrastructure.</p> </li> <li> <p>Custom Ansible Resources Need something tailored? I develop custom Ansible modules, plugins, roles, collections to meet your specific needs, extending Ansible\u2019s functionality to fit your environment.</p> </li> </ul>"},{"location":"#fun-facts-about-me","title":"Fun Facts About Me","text":"<p>Nestled in the heart of creativity, beyond the ordinary and the expected, I thrive in a realm where ideas come to life. My journey is fueled by passion, and these numbers tell the story of my impact:</p> <ul> <li>15000 Students</li> <li>639 Written Articles</li> <li>30 Video Courses</li> <li>60 Video Course Hours</li> </ul>"},{"location":"code-examples/","title":"Code examples","text":""},{"location":"code-examples/#introduction","title":"Introduction","text":"<p>In the realm of Ansible automation, managing complex data structures is often required. Two powerful tools, the <code>product</code> and <code>combine</code> filters, play distinct roles in manipulating lists and dictionaries, respectively. Understanding their use cases can significantly enhance your playbook efficiency.</p>"},{"location":"code-examples/#product-cartesian-product-of-lists","title":"<code>product</code>: Cartesian Product of Lists","text":"<p>The <code>product</code> filter in Ansible generates the Cartesian product of two or more lists, producing all possible combinations of their elements. This is particularly useful when you need to iterate over multiple sets of values to configure systems or environments.</p>"},{"location":"code-examples/#example-configuring-hosts-across-environments","title":"Example: Configuring Hosts Across Environments","text":"<pre><code>- hosts: localhost\n  gather_facts: no\n  tasks:\n    - name: Generate combinations of environments and roles\n      ansible.builtin.debug:\n        msg: \"{{ ['dev', 'test', 'prod'] | product(['web', 'db']) | list }}\"\n</code></pre>"},{"location":"code-examples/#output","title":"Output:","text":"<pre><code>[\n  [\"dev\", \"web\"], [\"dev\", \"db\"],\n  [\"test\", \"web\"], [\"test\", \"db\"],\n  [\"prod\", \"web\"], [\"prod\", \"db\"]\n]\n</code></pre> <p>In this example, the <code>product</code> filter creates pairs of environments and roles, enabling scalable and dynamic configuration.</p>"},{"location":"code-examples/#use-case","title":"Use Case:","text":"<ul> <li>Generating matrix-style combinations for testing or deployments.</li> <li>Configuring multiple environments in one go.</li> </ul>"},{"location":"code-examples/#combine-merging-dictionaries","title":"<code>combine</code>: Merging Dictionaries","text":"<p>The <code>combine</code> filter allows you to merge multiple dictionaries into one, providing a way to consolidate configurations or override existing values.</p>"},{"location":"code-examples/#example-merging-configuration-maps","title":"Example: Merging Configuration Maps","text":"<pre><code>- hosts: localhost\n  gather_facts: no\n  tasks:\n    - name: Merge default and custom configurations\n      ansible.builtin.debug:\n        msg: \"{{ {'default_key': 'default_value'} | combine({'custom_key': 'custom_value'}) }}\"\n</code></pre>"},{"location":"code-examples/#output_1","title":"Output:","text":"<pre><code>{\n  \"default_key\": \"default_value\",\n  \"custom_key\": \"custom_value\"\n}\n</code></pre> <p>You can use the <code>combine</code> filter to dynamically construct configurations or override default values with user-provided data.</p>"},{"location":"code-examples/#use-case_1","title":"Use Case:","text":"<ul> <li>Building dynamic variables from defaults and user inputs.</li> <li>Consolidating configurations for modular roles or playbooks.</li> </ul>"},{"location":"code-examples/#combining-product-and-combine-for-advanced-scenarios","title":"Combining <code>product</code> and <code>combine</code> for Advanced Scenarios","text":"<p>Sometimes, these filters can be used together to manage complex scenarios, such as creating a dictionary of all possible role-environment pairs.</p>"},{"location":"code-examples/#example","title":"Example:","text":"<pre><code>- hosts: localhost\n  gather_facts: no\n  tasks:\n    - name: Create a dictionary of environment-role pairs\n      ansible.builtin.debug:\n        msg: &gt;-\n          {{\n            dict(\n              ['dev', 'test', 'prod'] | product(['web', 'db']) |\n              map('join', '_') |\n              map('extract', 0, ['web', 'db'])\n            )\n          }}\n</code></pre> <p>This advanced usage combines Cartesian products and dictionary manipulations to build intricate data structures for automation workflows.</p>"},{"location":"code-examples/#conclusion","title":"Conclusion","text":"<p>Understanding the nuances of the <code>product</code> and <code>combine</code> filters empowers you to handle lists and dictionaries effectively in Ansible. Whether you're iterating over combinations or merging configurations, these tools are essential for robust and flexible automation playbooks.</p> <p>For more detailed examples and real-world use cases, explore additional Ansible resources or check out my book Ansible By Examples.</p>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/","title":"Ubuntu 24.04 LTS","text":""},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#introduction","title":"Introduction","text":"<p>In the rapidly evolving landscape of IT infrastructure management, Ansible emerges as a beacon of efficiency and simplicity. This open-source tool, championed by Red Hat, automates complex IT tasks and provides a user-friendly interface that simplifies the process of managing large-scale systems. This article delves into the practical application of Ansible in managing Ubuntu systems, using a real-world session log to illustrate its integration and efficacy.</p> <p>The integration of Ansible into Ubuntu systems provides significant security benefits. By automating the patch management process, Ansible ensures that all systems are up-to-date with the latest security patches, reducing the risk of vulnerabilities. Additionally, Ansible's agentless architecture minimizes the system's attack surface, as it does not require additional software installed on the client machines.</p>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#instructions","title":"Instructions","text":"<p>Here is a step-by-step guide to securely connect to an Ubuntu 24.04 server and install Ansible for automation tasks:</p>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#step-1-establishing-ssh-connection","title":"Step 1: Establishing SSH Connection","text":"<ol> <li>Open Terminal: Start by opening your terminal on your local machine.</li> <li>Connect via SSH: Use the SSH command to initiate a secure connection:</li> </ol> <pre><code>ssh devops@ubuntu.example.com\n</code></pre> <ol> <li>Replace <code>devops</code> with your actual username and <code>ubuntu.example.com</code> with your server's hostname or IP address.</li> <li>Verify Host Authenticity: Upon first connection, you'll be asked to verify the host's fingerprint:</li> </ol> <p>The authenticity of host 'ubuntu.example.com (192.168.246.145)' can't be established.\\ ED25519 key fingerprint is SHA256:WJG2h7cUirgFb3aXxeQkwvUJfE76ea21+U3mTD23tOQ.\\ Are you sure you want to continue connecting (yes/no/[fingerprint])?</p> <ol> <li>Type <code>yes</code> to continue if you recognize the fingerprint.</li> <li>Enter Password: Input your user password when prompted to establish the connection.</li> </ol>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#step-2-initial-server-setup-and-updates","title":"Step 2: Initial Server Setup and Updates","text":"<ol> <li>Check for Updates: Once connected, check for available updates:</li> </ol> <pre><code>sudo apt update\n</code></pre> <ol> <li>This command updates the list of packages and their versions on your server but doesn't install them.</li> <li>Upgrade Packages: Optionally, you can upgrade all your system software to the latest available versions:</li> </ol> <pre><code>sudo apt upgrade\n</code></pre> <ol> <li>Confirm the prompt with <code>y</code> to proceed with the upgrades.</li> </ol>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#step-3-installing-ansible","title":"Step 3: Installing Ansible","text":"<ol> <li>Install Ansible: After updating your system, install Ansible using:</li> </ol> <pre><code>sudo apt install ansible\n</code></pre> <pre><code>Reading package lists... Done\nBuilding dependency tree... Done\nReading state information... Done\nThe following additional packages will be installed:\n  ansible-core python3-argcomplete python3-dnspython python3-jmespath python3-kerberos\\\n  python3-libcloud python3-lockfile python3-ntlm-auth python3-packaging python3-passlib\\\n  python3-requests-ntlm python3-resolvelib python3-selinux python3-simplejson\\\n  python3-winrm python3-xmltodict\nSuggested packages:\n  cowsay sshpass python3-trio python3-aioquic python3-h2 python3-httpx python3-httpcore\\\n  python-lockfile-doc\nThe following NEW packages will be installed:\n  ansible ansible-core python3-argcomplete python3-dnspython python3-jmespath\n  python3-kerberos python3-libcloud python3-lockfile python3-ntlm-auth\n  python3-packaging python3-passlib python3-requests-ntlm python3-resolvelib\n  python3-selinux python3-simplejson python3-winrm python3-xmltodict\n0 upgraded, 17 newly installed, 0 to remove and 67 not upgraded.\nNeed to get 19.6 MB of archives.\nAfter this operation, 316 MB of additional disk space will be used.\nDo you want to continue? [Y/n] Y\n</code></pre> <ol> <li>This command installs Ansible along with its dependencies. Confirm the installation by typing <code>y</code> when prompted.</li> <li>Verify Installation: Check the installed version of Ansible to ensure it is correctly installed:</li> </ol> <pre><code>ansible --version\n</code></pre> <pre><code>ansible [core 2.16.3]\n  config file = None\n  configured module search path = ['/root/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']\n  ansible python module location = /usr/lib/python3/dist-packages/ansible\n  ansible collection location = /root/.ansible/collections:/usr/share/ansible/collections\n  executable location = /usr/bin/ansible\n  python version = 3.12.3 (main, Apr 10 2024, 05:33:47) [GCC 13.2.0] (/usr/bin/python3)\n  jinja version = 3.1.2\n  libyaml = True\n</code></pre> <ol> <li>This will display the version and configuration details of Ansible.</li> </ol>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#step-4-configuring-ansible-optional","title":"Step 4: Configuring Ansible (Optional)","text":"<ol> <li>You can generate the default configuration file using the command:</li> </ol> <pre><code>ansible-config init --disabled &gt; ansible.cfg\n</code></pre> <ol> <li>Configure Ansible: You can modify Ansible's configuration settings by editing its configuration file:</li> </ol> <pre><code>sudo nano /etc/ansible/ansible.cfg\n</code></pre> <ol> <li>Make necessary changes such as default inventory file, privilege escalation settings, etc., according to your requirements.</li> <li>Create Inventory File: Ansible uses an inventory file to keep track of the servers it manages. Create a new inventory:</li> </ol> <pre><code>sudo nano /etc/ansible/hosts\n</code></pre> <ol> <li>Add your servers under appropriate groups for better organization.</li> </ol> <pre><code>localhost ansible_connection=local\n</code></pre>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#step-5-testing-ansible-connection","title":"Step 5: Testing Ansible Connection","text":"<ol> <li>Test Connection: Run a simple Ansible command to check if Ansible can connect to the servers listed in your inventory file:</li> </ol> <pre><code>ansible all -m ping\n</code></pre> <ol> <li>This command tests connectivity to all hosts in your inventory using the ping module. This is the expected output:</li> </ol> <pre><code>localhost | SUCCESS =&gt; {\n    \"ansible_facts\": {\n        \"discovered_interpreter_python\": \"/usr/bin/python3\"\n    },\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n</code></pre>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#additional-tips","title":"Additional Tips","text":"<ul> <li>Secure SSH: Consider configuring SSH key-based authentication for a more secure and convenient server access method.</li> <li>Regular Updates: Regularly update your server's packages and security patches using <code>apt update</code> and <code>apt upgrade</code>.</li> <li>Ansible Playbooks: Start creating Ansible playbooks to automate more complex IT tasks across your servers.</li> </ul> <p>By following these steps, you'll have a secure and functional setup for managing and automating tasks on your Ubuntu 24.04 server using Ansible. This setup provides a robust foundation for scaling your infrastructure management tasks efficiently.</p>"},{"location":"Getting%20Started/Ubuntu%2024.04%20LTS/#conclusion","title":"Conclusion","text":"<p>The use of Ansible in managing Ubuntu systems exemplifies the transformative impact of automation in IT operations. The session log provides a concrete example of how Ansible can be integrated into existing workflows to enhance efficiency, security, and manageability. As IT environments continue to grow in complexity, the role of automation tools like Ansible becomes increasingly critical. By embracing these tools, organizations can significantly reduce operational overheads and enhance their ability to respond swiftly to changing technological landscapes.</p> <p>In summary, the practical application of Ansible in Ubuntu systems not only streamlines operations but also fortifies them against security threats, proving itself as an indispensable tool for modern IT infrastructure management.</p>"},{"location":"Getting%20Started/Windows%20Hosts/","title":"How to configure a Windows Host for Ansible?","text":"<p>I'll show you step by step on a freshly installed machine how to configure a \"basic\" authentication, use a Local Accounts for authentication and successfully execute a simple \"win_ping\" Ansible Playbook. This initial configuration sometimes is a roadblock for some Windows users to start using Ansible. I'm Luca Berton and welcome to today's episode of Ansible Pilot.</p>"},{"location":"Getting%20Started/Windows%20Hosts/#configure-a-windows-host-for-ansible","title":"Configure a Windows Host for Ansible","text":"<ul> <li>Windows 7, 8.1, 10, 11</li> <li>Windows Server 2008, 2008 R2, 2012, 2012 R2, 2016, 2019, 2022</li> <li>PowerShell 3.0+ and .NET 4.0+</li> <li>WinRM or OpenSSH (experimental)</li> </ul> <p>The supported nodes include all the modern releases of Windows Desktop and Server. The full list includes Windows 7, 8.1, 10, 11, and Windows Server 2008, 2008 R2, 2012, 2012 R2, 2016, 2019, 2022. Ansible requires PowerShell 3.0 or newer and at least .NET 4.0 to be installed on the Windows host. You need to upgrade only old Windows 7 and Windows Server 2008 nodes. The communication between Ansible Controller and the target node is executed via a WinRM listener that needs to be created and activated. Ansible 2.8 has added an experimental SSH connection for Windows-managed nodes for Windows 10+ clients and Windows Server 2019+. In this example, we're going to cover the WinRM connection method with \"basic\" authentication. Refer to manual for more WinRM wide range of configuration options.</p>"},{"location":"Getting%20Started/Windows%20Hosts/#links","title":"Links","text":"<ul> <li>Setting up a Windows Host</li> <li>Windows Remote Management</li> </ul>"},{"location":"Getting%20Started/Windows%20Hosts/#playbook","title":"Playbook","text":"<p>How to configure a Windows Host for Ansible connections.</p> <ul> <li>Create a user</li> <li>verify PowerShell &amp; .NET</li> <li>setup WinRM</li> <li>create Inventory &amp; Playbook</li> </ul> <p>First of all, I'd suggest creating a user to run Ansible automation. This user needs to be Power User or have Administrative privileges in order to execute some Ansible code. Second, you need to verify that PowerShell and .NET versions, modern operating systems already meet the requirements. The most important part is to set up the WinRM. There is a great PowerShell script that sets up both HTTP and HTTPS listeners with a self-signed certificate and enables the Basic authentication option on the service. Once everything is done on the node you could configure the Ansible inventory on the Ansible Controller machine and run your first Ansible Playbook with the <code>win_ping</code> module to verify the successful configuration.</p>"},{"location":"Getting%20Started/Windows%20Hosts/#windows-node","title":"Windows node","text":""},{"location":"Getting%20Started/Windows%20Hosts/#create-an-ansible-user","title":"Create an \"ansible\" user","text":"<ol> <li>open Computer Management (right-click from \"This PC\" &gt; \"Manage\")</li> </ol> <ol> <li>New User (right-click from \"Users\" &gt; \"New User\")</li> </ol> <p>User name: ansible Full name: ansible Description: ansible user Password and Confirm password: SuperSecurePassword123@ Options: enable <code>Password never expires</code> disable <code>User must change password at next logon</code></p> <p></p> <ol> <li>Add \"ansible\" user to \"administrators\" Group</li> </ol> <p></p>"},{"location":"Getting%20Started/Windows%20Hosts/#verify-powershell-net-and-set-up-winrm","title":"Verify PowerShell, .NET and set up WinRM","text":"<ol> <li>verify PowerShell version</li> </ol> <pre><code>Windows PowerShell\nCopyright (C) Microsoft Corporation. All rights reserved.\nTry the new cross-platform PowerShell https://aka.ms/pscore6\nPS C:\\Users\\vagrant&gt; Get-Host | Select-Object Version\nVersion\n-------\n5.1.19041.1237\n</code></pre> <ol> <li>verify .NET version</li> </ol> <pre><code>PS C:\\Users\\vagrant&gt; Get-ChildItem 'HKLM:\\SOFTWARE\\Microsoft\\NET Framework Setup\\NDP' -Recurse | Get-ItemProperty -Name version -EA 0 | Where { $_.PSChildName -Match '^(?!S)\\p{L}'} | Select PSChildName, version\n&gt;&gt;\nPSChildName Version\n----------- -------\nClient      4.8.04084\nFull        4.8.04084\nClient      4.0.0.0\nPS C:\\Users\\vagrant&gt;\n</code></pre> <ol> <li>Verify WinRM not-configured</li> </ol> <pre><code>PS C:\\Users\\vagrant&gt; winrm get winrm/config/Service\nWSManFault\n    Message = The client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nError number:  -2144108526 0x80338012\nThe client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nPS C:\\Users\\vagrant&gt; winrm get winrm/config/Winrs\nWSManFault\n    Message = The client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nError number:  -2144108526 0x80338012\nThe client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nPS C:\\Users\\vagrant&gt; winrm enumerate winrm/config/Listener\nWSManFault\n    Message = The client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nError number:  -2144108526 0x80338012\nThe client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: \"winrm quickconfig\".\nPS C:\\Users\\vagrant&gt;\n</code></pre> <ol> <li>Setup WinRM</li> </ol> <pre><code>PS C:\\Users\\vagrant&gt; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n&gt;&gt; $url = \"https://raw.githubusercontent.com/ansible/ansible/devel/examples/scripts/ConfigureRemotingForAnsible.ps1\"\n&gt;&gt; $file = \"$env:temp\\ConfigureRemotingForAnsible.ps1\"\n&gt;&gt;\n&gt;&gt; (New-Object -TypeName System.Net.WebClient).DownloadFile($url, $file)\n&gt;&gt;\n&gt;&gt; powershell.exe -ExecutionPolicy ByPass -File $file\nPS C:\\Users\\vagrant&gt;\n</code></pre> <ol> <li>Verify WinRM configured</li> </ol> <pre><code>PS C:\\Users\\vagrant&gt; winrm get winrm/config/Service\nService\n    RootSDDL = O:NSG:BAD:P(A;;GA;;;BA)(A;;GR;;;IU)S:P(AU;FA;GA;;;WD)(AU;SA;GXGW;;;WD)\n    MaxConcurrentOperations = 4294967295\n    MaxConcurrentOperationsPerUser = 1500\n    EnumerationTimeoutms = 240000\n    MaxConnections = 300\n    MaxPacketRetrievalTimeSeconds = 120\n    AllowUnencrypted = true\n    Auth\n        Basic = true\n        Kerberos = true\n        Negotiate = true\n        Certificate = false\n        CredSSP = false\n        CbtHardeningLevel = Relaxed\n    DefaultPorts\n        HTTP = 5985\n        HTTPS = 5986\n    IPv4Filter = *\n    IPv6Filter = *\n    EnableCompatibilityHttpListener = false\n    EnableCompatibilityHttpsListener = false\n    CertificateThumbprint\n    AllowRemoteAccess = true\nPS C:\\Users\\vagrant&gt;\nPS C:\\Users\\vagrant&gt; winrm get winrm/config/Winrs\nWinrs\n    AllowRemoteShellAccess = true\n    IdleTimeout = 7200000\n    MaxConcurrentUsers = 2147483647\n    MaxShellRunTime = 2147483647\n    MaxProcessesPerShell = 2147483647\n    MaxMemoryPerShellMB = 2147483647\n    MaxShellsPerUser = 2147483647\nPS C:\\Users\\vagrant&gt; winrm enumerate winrm/config/Listener\nListener\n    Address = *\n    Transport = HTTPS\n    Port = 5986\n    Hostname = WIN10\n    Enabled = true\n    URLPrefix = wsman\n    CertificateThumbprint = F4D065F8FC6EE18F1F0FF9533584955D0C9B8E59\n    ListeningOn = 10.0.2.15, 127.0.0.1, 169.254.20.54, ::1, fe80::44a1:482d:5918:7cb4%4, fe80::d017:a935:ff50:4eb4%5\nPS C:\\Users\\vagrant&gt; winrm enumerate winrm/config/Listener\nListener\n    Address = *\n    Transport = HTTPS\n    Port = 5986\n    Hostname = WIN10\n    Enabled = true\n    URLPrefix = wsman\n    CertificateThumbprint = F4D065F8FC6EE18F1F0FF9533584955D0C9B8E59\n    ListeningOn = 10.0.2.15, 127.0.0.1, 192.168.0.83, ::1, fe80::94b1:dc79:39cf:8b61%4, fe80::d017:a935:ff50:4eb4%5\nPS C:\\Users\\vagrant&gt;\n</code></pre>"},{"location":"Getting%20Started/Windows%20Hosts/#ansible-controller","title":"Ansible Controller","text":""},{"location":"Getting%20Started/Windows%20Hosts/#code","title":"code","text":"<ul> <li>inventory</li> </ul> <pre><code>[windows]\nwindows10 ansible_host=192.168.0.59\n[windows:vars]\nansible_user=ansible\nansible_password=SuperSecurePassword123@\nansible_port=5986\nansible_connection=winrm\nansible_winrm_transport=basic\nansible_winrm_server_cert_validation=ignore\n</code></pre> <ul> <li>win_ping.yml</li> </ul> <pre><code>---\n- name: win_ping module Playbook\n  hosts: windows\n  become: false\n  gather_facts: false\n  tasks:\n    - name: test connection\n      ansible.windows.win_ping:\n</code></pre>"},{"location":"Getting%20Started/Windows%20Hosts/#execution","title":"execution","text":"<pre><code>ansible-pilot $ ansible-playbook -i windows/inventory windows/win_ping.yml\nPLAY [win_ping module Playbook] ***********************************************************************\nTASK [test connection] ****************************************************************************\nok: [windows10]\nPLAY RECAP ****************************************************************************************\nwindows10                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0\nansible-pilot $\n</code></pre> <p>code with \u2764\ufe0f in GitHub</p>"},{"location":"Getting%20Started/Windows%20Hosts/#conclusion","title":"Conclusion","text":"<p>Now you know Configure a Windows Host for Ansible.</p>"},{"location":"Materials/books/","title":"Published Books: Learn Ansible, VMware, Kubernetes, and Hybrid Cloud","text":"<p>Discover Luca Berton's comprehensive books and eBooks on automating VMware, Kubernetes, hybrid cloud, and more with Ansible. Enhance efficiency, reduce errors, and scale your IT infrastructure effectively.</p>"},{"location":"Materials/books/#published-books","title":"Published Books","text":""},{"location":"Materials/books/#ansible-for-vmware-by-examples","title":"Ansible for VMware by Examples","text":"<p>Automate VMware environments with Ansible. This book covers all you need to manage your VMware infrastructure with Ansible.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-kubernetes-by-example","title":"Ansible for Kubernetes by Example","text":"<p>Learn how to automate Kubernetes clusters with Ansible. Streamline your container orchestration processes.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#hands-on-ansible-automation","title":"Hands-on Ansible Automation","text":"<p>This book provides insights on managing hybrid cloud environments with Ansible, covering multi-cloud orchestration.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#red-hat-ansible-automation","title":"Red Hat Ansible Automation","text":"<p>Deep dive into advanced Ansible techniques, covering complex playbooks, modules, and custom integrations.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#mastering-the-red-hat-certified-engineer-rhce-exam","title":"Mastering the Red Hat Certified Engineer (RHCE) Exam","text":"<p>Your complete guide to Linux administration, automation, and certification (English Edition)</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#learn-ansible","title":"Learn Ansible","text":"<p>2nd edition - Automate your cloud infrastructure, security configuration, and application deployment with Ansible. Author: Russ McKendrick.</p> <p>Technical review: Luca Berton. Published: 31st May 2024. Author: Russ McKendrick (Technical review: Luca Berton)</p>"},{"location":"Materials/books/#ebooks","title":"eBooks","text":""},{"location":"Materials/books/#ansible-by-examples","title":"Ansible by Examples","text":"<p>200+ Automation Examples For Linux and Windows System Administrator and DevOps.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-cookbook","title":"Ansible Cookbook","text":"<p>A Comprehensive Guide to Unleashing the Power of Ansible via Best Practices, Troubleshooting, and Linting Rules.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#terraform-by-example","title":"Terraform By Example","text":"<p>A Practical Approach for Beginners to Learn Cloud Infrastructure with Terraform.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-windows-by-examples","title":"Ansible For Windows By Examples","text":"<p>50+ Automation Examples For Windows System Administrator, Tasks And DevOps.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-linux-by-examples","title":"Ansible For Linux by Examples","text":"<p>100+ Automation Examples For Linux System Administrator and DevOps.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-linux-filesystem-by-examples","title":"Ansible Linux Filesystem By Examples","text":"<p>40+ Automation Examples on Linux File and Directory Operation for Modern IT Infrastructure.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-security-by-examples","title":"Ansible For Security by Examples","text":"<p>100+ Automation Examples to Automate Security and Verify Compliance for IT Modern Infrastructure.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-tips-and-tricks","title":"Ansible Tips and Tricks","text":"<p>10+ Ansible Examples to Save Time and Automate More Tasks.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-linux-users-groups-by-examples","title":"Ansible Linux Users &amp; Groups By Examples","text":"<p>20+ Automation Examples on Linux Users and Groups Operation for Modern IT Infrastructure.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-postgresql-by-examples","title":"Ansible For PostgreSQL by Examples","text":"<p>10+ Examples To Automate Your PostgreSQL database.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-for-amazon-web-services-aws-by-examples","title":"Ansible For Amazon Web Services AWS By Examples","text":"<p>10+ Examples To Automate Your AWS Modern Infrastructure.</p> <p>Author: Luca Berton</p>"},{"location":"Materials/books/#ansible-automation-platform-by-example","title":"Ansible Automation Platform By Example","text":"<p>A step-by-step guide for the most common user scenarios.</p> <p>Author: Luca Berton</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/","title":"Using Date, Time and Timestamp in Ansible Playbook","text":"<p>Welcome to another episode of Ansible Pilot! I'm Luca Berton, and today we're diving into the fascinating world of handling date, time, and timestamps in Ansible Playbooks. We'll explore the <code>ansible_date_time</code> variable, conduct a live Playbook, and provide you with simple Ansible code to get started.</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/#the-ansible_date_time-variable","title":"The <code>ansible_date_time</code> Variable","text":"<p>Ansible simplifies working with date and time information through the <code>ansible_date_time</code> variable. This built-in variable comes packed with a wealth of information, neatly organized into key-value pairs. Let's take a closer look at some of the key values it provides:</p> <pre><code>\"ansible_date_time\": {\n    \"date\": \"2022-05-18\",\n    \"day\": \"18\",\n    \"epoch\": \"1652887408\",\n    \"hour\": \"15\",\n    \"iso8601\": \"2022-05-18T15:23:28Z\",\n    \"minute\": \"23\",\n    \"month\": \"05\",\n    \"second\": \"28\",\n    \"time\": \"15:23:28\",\n    \"tz\": \"UTC\",\n    \"weekday\": \"Wednesday\",\n    \"weekday_number\": \"3\",\n    \"year\": \"2022\"\n}\n</code></pre> <p>These values cover everything from the current date, time, and timezone to more detailed information like the day of the week, month, and year. This data can be immensely useful in various scenarios within your Ansible Playbook.</p> <p>One important note: to leverage the <code>ansible_date_time</code> variable, ensure that Ansible Facts are enabled in your playbook by including <code>gather_facts: true</code>.</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/#playbook","title":"Playbook","text":"<p>Are you ready for a hands-on experience? Let's jump into a quick live Playbook where we'll showcase how to display the full <code>ansible_date_time</code> and the ISO8601 format.</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/#ansible-playbook-code","title":"Ansible Playbook Code","text":"<pre><code>---\n- name: date and time Playbook\n  hosts: all\n  gather_facts: true\n  tasks:\n    - name: date and time\n      ansible.builtin.debug:\n        var: ansible_date_time\n    - name: ISO8601\n      ansible.builtin.debug:\n        var: ansible_date_time.iso8601\n</code></pre> <p>{{&lt; promote-video-book &gt;}}</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/#execution","title":"Execution","text":"<p>Run the following command to execute the playbook:</p> <pre><code>$ ansible-playbook -i inventory datetime_fact.yml\n</code></pre> <p>The output will provide detailed information about the current date and time, as well as the ISO8601 format.</p>"},{"location":"Playbook/Using%20Date%20Time%20and%20Timestamp%20in%20Ansible%20Playbook/#conclusion","title":"Conclusion","text":"<p>Congratulations! You've just learned how to harness the power of date, time, and timestamp variables in your Ansible Playbooks. The <code>ansible_date_time</code> variable opens up a world of possibilities for managing time-related data effortlessly. Feel free to explore and integrate this knowledge into your automation workflows. Happy automating!</p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/live-from-fosdem-2025/","title":"Live from FOSDEM 2025!","text":"<p>The open-source world never stops evolving, and neither does the enthusiasm of its community. This year, I had the privilege of participating as a guest in a live streaming session with La Brigata dei Geek Estinti (BGE) during FOSDEM 2025, one of the most significant conferences dedicated to free and open-source software.</p>","tags":["Events"]},{"location":"blog/live-from-fosdem-2025/#a-unique-live-experience","title":"A Unique Live Experience","text":"<p>FOSDEM has always been a meeting point for developers, enthusiasts, and professionals passionate about open-source technologies. This year, thanks to BGE, I had the opportunity to share thoughts and experiences in a dynamic and engaging live streaming session: BGE On the Road 5 - FOSDEM 2025.</p> <p>Streaming live from the heart of the event, we discussed key takeaways, trends, and the vibrant atmosphere of FOSDEM. Being part of this discussion was incredibly rewarding, allowing me to connect with fellow geeks and tech enthusiasts in real-time.</p>","tags":["Events"]},{"location":"blog/live-from-fosdem-2025/#topics-we-covered","title":"Topics We Covered","text":"<p>During the live session, we explored: - The latest innovations in open-source software. - The impact of community-driven development. - The role of automation, DevOps, and cloud technologies in modern IT. - Personal experiences and the importance of in-person tech conferences.</p> <p>The session wasn\u2019t just about technology; it was about the people behind it. FOSDEM 2025 reminded us that collaboration is at the heart of every successful open-source project.</p>","tags":["Events"]},{"location":"blog/live-from-fosdem-2025/#a-big-thanks-to-bge-and-the-community","title":"A Big Thanks to BGE and the Community","text":"<p>I want to extend a huge thank you to La Brigata dei Geek Estinti for organizing this fantastic live streaming and inviting me to be part of it. Engaging with a passionate audience and discussing the future of open-source was an unforgettable experience.</p> <p>If you missed the live session, don\u2019t worry! You can still watch the recording here:</p>","tags":["Events"]},{"location":"blog/live-from-fosdem-2025/#looking-ahead","title":"Looking Ahead","text":"<p>FOSDEM continues to be a hub of innovation, knowledge sharing, and networking. The open-source community never stops growing, and every event like this serves as a powerful reminder of its impact. I\u2019m already looking forward to future discussions, collaborations, and contributions.</p> <p>Let\u2019s keep the conversation going! If you attended FOSDEM 2025 or watched the live session, I\u2019d love to hear your thoughts. What were your key takeaways? What topics excited you the most?</p> <p>#FOSDEM2025 #BGEOnTheRoad #OpenSource #TechCommunity #LiveStreaming #DevOps #Linux #Automation</p>","tags":["Events"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/events/","title":"Events","text":""}]}